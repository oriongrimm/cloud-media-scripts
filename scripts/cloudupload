#!/bin/sh
#shellcheck source=config
########## CONFIGURATION ##########
. "../config"
###################################
#If script is already running; abort.
if pidof -o %PPID -x "$(basename "$0")"; then
    echo "[ $(date ${date_format}) ] Upload already in progress. Aborting."
    exit 3
fi

# Generate filelist and iterate through it...
find "${local_dir}" -type f |
while read -r n; do
    
    # Find the pathname relative to the root of your remote and store filename
    filename="$(echo "$n" | sed -e s@"${local_dir}"@@)"
    destpath="$(dirname "$n" | sed -e s@"${local_dir}"@@)"
    
    # Skip hidden or partial files.
    case "$n" in
    (*.partial~) continue ;;
(*_HIDDEN~) continue ;;
(*.QTFS) continue ;;
(*.fuse*) continue ;;
(.DS_STORE) continue ;;
esac
    
    # If file is opened by another process, wait until it isn't.
    while [ "$(lsof "$n" >/dev/null 2>&1)" ] || \
    [ "$(lsof "${local_dir}/${n}" >/dev/null 2>&1)" ] || \
    [ "$(lsof "${local_media_dir}/${n}" >/dev/null 2>&1)" ]; do
        echo "[ $(date ${date_format}) ] File -> ${n} in use. Retrying in 10 seconds."
        sleep 10
    done
    
    # Copy file to remote destination[s], retaining path
    echo "[ $(date ${date_format}) ] Transfering file -> ${n} to Google Drive in ${destpath}."
    "${rclone_bin}" copy --config="${rclone_cfg}" "$n" "${rclone_cloud_endpoint}${destpath}" >/dev/null 2>&1
done

# success!
exit 02

